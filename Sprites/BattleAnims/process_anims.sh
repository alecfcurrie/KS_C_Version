#!/bin/bash

SUBDIRECTORY="BattleAnimData"
OUTPUT_FILE="AnimationTableInstaller.event"
INDEX_FILE="AnimationIndexes.event"
REFERENCE_FILE="../Data/AnimationReference.h"
SOURCE_FILE="../Data/AnimationReference.c"

SKIP_IDS_FILE="TakenIDs.txt"  # Default skip file
declare -A reserved_ids

# Load reserved ID numbers from skip file
load_reserved_ids() {
  [[ -f "$SKIP_IDS_FILE" ]] || return
  while IFS= read -r line; do
    line="${line%%#*}"                      # Remove comments
    line="$(echo -e "${line}" | tr -d '[:space:]')"  # Strip whitespace
    [[ "$line" =~ ^[0-9]+$ ]] && reserved_ids["$line"]=1
  done < "$SKIP_IDS_FILE"
}

# Get the next free index not in reserved_ids
next_free_index() {
  while [[ ${reserved_ids["$index"]+_} ]]; do
    ((index++))
  done
  echo "$index"
}

init_file() {
  local file="$1"
  : > "$file"
  echo "// Auto-generated by process_anims.sh" >> "$file"
  echo "" >> "$file"
}

write_installer() {
  local filename="$1"
  echo "    #include \"$filename\"" >> "$OUTPUT_FILE"
}

write_reference() {
  extract_weapon_class "$1"
  write_battle_anim_def
}

write_battle_anim_def() {
  echo "    {" >> "$SOURCE_FILE"
  if [[ "$curr_weapon" == "HANDAXE" ]]; then
    echo "        .wtype = ITEM_AXE_HANDAXE," >> "$SOURCE_FILE"
    echo "        .index = (u16) $curr_class_gender_weapon" >> "$SOURCE_FILE"
    echo "    }," >> "$SOURCE_FILE"
    echo "    {" >> "$SOURCE_FILE"
    echo "        .wtype = ITEM_AXE_TOMAHAWK," >> "$SOURCE_FILE"
    echo "        .index = (u16) $curr_class_gender_weapon" >> "$SOURCE_FILE"
  elif [[ "$curr_weapon" == "MAGIC" ]]; then
    echo "        .wtype = 0x0100 | ITYPE_ANIMA," >> "$SOURCE_FILE"
    echo "        .index = (u16) $curr_class_gender_weapon" >> "$SOURCE_FILE"
    echo "    }," >> "$SOURCE_FILE"
    echo "    {" >> "$SOURCE_FILE"
    echo "        .wtype = 0x0100 | ITYPE_DARK," >> "$SOURCE_FILE"
    echo "        .index = (u16) $curr_class_gender_weapon" >> "$SOURCE_FILE"
    echo "    }," >> "$SOURCE_FILE"
    echo "    {" >> "$SOURCE_FILE"
    echo "        .wtype = 0x0100 | ITYPE_STAFF," >> "$SOURCE_FILE"
    echo "        .index = (u16) $curr_class_gender_weapon" >> "$SOURCE_FILE"
  elif [[ "$curr_weapon" == "UNARMED" ]]; then
    echo "        .wtype = 0x0100 | ITYPE_ITEM," >> "$SOURCE_FILE"
    echo "        .index = (u16) $curr_class_gender_weapon" >> "$SOURCE_FILE"
  else
    echo "        .wtype = 0x0100 | ITYPE_${curr_weapon}," >> "$SOURCE_FILE"
    echo "        .index = (u16) $curr_class_gender_weapon" >> "$SOURCE_FILE"
  fi
  echo "    }," >> "$SOURCE_FILE"
}

extract_weapon_class() {
  local filename="$1"
  local basename="${filename#$SUBDIRECTORY}"
  curr_weapon="$(echo "$basename" | cut -d'_' -f3 | cut -d'.' -f1)"
  curr_class_gender_weapon="$(echo "$basename" | cut -d'.' -f1 | tr -d '/')"
}

init_file "$OUTPUT_FILE"
init_file "$INDEX_FILE"
init_file "$REFERENCE_FILE"
init_file "$SOURCE_FILE"

load_reserved_ids

declare -A class_files
declare -A animation_indexes
index=1

echo "#include \"AnimationIndexes.event\"" >> "$OUTPUT_FILE"
echo "" >> "$OUTPUT_FILE"
echo "#define ClassAnimTable (0xc00008-0x20)" >> "$OUTPUT_FILE"
echo "#define AnimTableEntry(index) \"ORG ClassAnimTable + (index * 0x20)\"" >> "$OUTPUT_FILE"
echo "" >> "$OUTPUT_FILE"

echo "#pragma once" >> "$REFERENCE_FILE"
echo "#define ITYPE_KNIFE ITYPE_LIGHT" >> "$REFERENCE_FILE"
echo "" >> "$REFERENCE_FILE"
echo "enum AnimationTableIndex {" >> "$REFERENCE_FILE"

echo "#include \"common-chax.h\"" >> "$SOURCE_FILE"
echo "#include \"KSDefinitions.h\"" >> "$SOURCE_FILE"
echo "" >> "$SOURCE_FILE"

while IFS= read -r event_file; do
  [[ -f "$event_file" ]] || continue

  file_name=$(basename "$event_file")
  class_gender="${file_name%_*}"
  animation_name="${file_name%.event}"

  class_files["$class_gender"]+="$event_file"$'\n'

  if [[ -z "${animation_indexes[$animation_name]}" ]]; then
    next_index=$(next_free_index)
    animation_indexes[$animation_name]=$next_index
    echo "#define $animation_name $next_index" >> "$INDEX_FILE"
    echo "    $animation_name = $next_index," >> "$REFERENCE_FILE"
    ((index=next_index+1))  # Advance to next after assignment
  fi

done < <(find "$SUBDIRECTORY" -maxdepth 1 -type f -name "*.event" | sort)

echo "};" >> "$REFERENCE_FILE"
echo "" >> "$REFERENCE_FILE"

for class_gender in $(printf "%s\n" "${!class_files[@]}" | sort); do
  echo "// ${class_gender}" >> "$OUTPUT_FILE"
  echo "{" >> "$OUTPUT_FILE"
  
  echo "extern const struct BattleAnimDef ${class_gender}_REF[];" >> "$REFERENCE_FILE"
  echo "const struct BattleAnimDef ${class_gender}_REF[] = " >> "$SOURCE_FILE"
  echo "{" >> "$SOURCE_FILE"

  while IFS= read -r file; do
    [[ -n "$file" ]] || continue
    write_installer "$file"
    write_reference "$file"
  done <<< "${class_files[$class_gender]}"
  
  echo "}" >> "$OUTPUT_FILE"
  echo "" >> "$OUTPUT_FILE"

  echo "    {0}" >> "$SOURCE_FILE"
  echo "};" >> "$SOURCE_FILE"
  echo "" >> "$SOURCE_FILE"
done

echo "'$OUTPUT_FILE' and '$INDEX_FILE' generated successfully."